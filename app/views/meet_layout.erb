<div id="meeting-list">
  <meetings></meetings>
</div>

<template id="meetings-template">
  <div class="columns">
    <div class="column is-2">
    </div>
    <div class="column">
      <div id='header' class="container box">
        <h1 class="title is-1">List of Meetings</h1>
        <div v-for="meeting in meetings">
        <meeting :meeting.sync="meeting"></meeting>
        </div>
      </div>
    </div>
    <div class="column is-2">
    </div>
  </div>
</template>

<template id="meeting-template">
      <div class="style-element section">
        <table class="table">
          <thead>
            <tr>
              <th></th>
              <th>Meeting Date</th>
              <th>Meeting Title</th>
              <th></th>
              <th></th>
            </tr>
          </thead>
          <tbody>
            <!-- <div v-for="meeting in meetings">
            <meeting :meeting.sync="meeting"></meeting>
            </div> -->
            <tr>
              <td><button><a href="api/meetings/{{meeting.id}}/edit">info</a></button></td>
              <td>{{ meeting.meeting_date | moment "dddd, MMMM Do YYYY, h:mm a"}}</td>
              <td>{{meeting.title}}</td>
              <td><button>{{ meeting.status }}</button></td>
              <td><i class="fa fa-trash pull-right" aria-hidden="true" @click="deleteMeeting"></i></td>
            </tr>
          </tbody>
          <tfoot>
            <tr>
              <th></th>
              <th>Meeting Date</th>
              <th>Meeting Title</th>
              <th></th>
              <th></th>
            </tr>
          </tfoot>
        </table>
      </div>
</template>

<script>

  Vue.component('meetings', {
    template: '#meetings-template',
    data: function() {
      return {
        meetings: [],
        currentMeetingIndex: 0
      }
    },
    created: function() {
      this.$http.get('/api/meetings').then(function(response){
        this.meetings = response.json();
      }.bind(this));
    },
    events: {
      'meeting-deleted': function(meeting) {
        var deletedMeetingIndex = this.meetings.indexOf(meeting)
        if (this.currentMeetingIndex === deletedMeetingIndex) {
          this.currentMeetingIndex = (deletedMeetingIndex -1)
        }
        this.meetings.pop(meeting)
      }
    }
  });

  Vue.component('meeting',{
    template: "#meeting-template",
    props: ['meeting'],
    methods: {
      deleteMeeting: function(){
        var meetingId = this.meeting.id
        console.log(meetingId)
        this.$http.get('/api/meetings/' + meetingId + '/delete', {'id': meetingId}, {emulateJSON:true}).then(function(response){
          this.$dispatch('meeting-deleted', this.meetingId)
        }.bind(this));
      }
    },
  });


  new Vue({
      el: '#meeting-list'
    });
</script>
