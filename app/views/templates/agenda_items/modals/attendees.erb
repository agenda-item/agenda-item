<template id="attendees-modal-template">
  <button class="button" @click.prevent="openModal">Log Attendees</button>

  <div class="modal" v-bind:class="{ 'is-active': showModal}">
  <div class="modal-background">
  </div>
    <div class="modal-card">
      <header class="modal-card-head">
        <h1 class="title is-3" class="modal-card-title">
          Log Votes</h1>
      </header>
      <section class="modal-card-body">
        <div class="modal-section">
          <div class="columns">
            <div class="column">
              <button class="button" @click.prevent="logAttendees('Present')">Log Present Members</button>
              <div class="select-user">
                <p>Present</p>
                <ul v-for="attendee in attendees | filterBy 'Present' in 'attendance_type'">
                  <board-member :agenda-item.sync="agendaItem" :attendee="attendee" :toggle-selected-member="toggleSelectedMember" :selected-members-list.sync="selectedMembersList"></board-member>
                </ul>
              </div>
            </div>
            <div class="column">
              <button class="button" @click.prevent="logAttendees('Absent')">Log Absent Members</button>
              <div class="select-user">
                <p>Absent</p>
                <ul v-for="attendee in attendees | filterBy 'Absent' in 'attendance_type'">
                  <board-member :agenda-item.sync="agendaItem" :attendee="attendee" :toggle-selected-member="toggleSelectedMember" :selected-members-list.sync="selectedMembersList"></board-member>
                </ul>
              </div>
            </div>
          </div>
      </section>
      <footer class="modal-card-foot">
        <button class="button" @click.prevent="closeModal">Close</button>
      </footer>
    </div>
</template>

<script>
  Vue.component('attendees-modal', {
    template: '#attendees-modal-template',
    props: ['agendaItem','attendees','currentMeeting'],
    data: function(){
      return {
        showModal: false,
        toggleSelectedMember: false,
        selectedMembersList: []
      }
    },
    methods: {
      openModal: function() {
        this.showModal = true
      },
      closeModal: function() {
        this.showModal = false
      },
      logAttendees: function(attendance_type) {
        var selectedMembers = this.selectedMembersList
        var url = '/api/meetings/' + this.currentMeeting.id + '/meeting-attendees'
        var setAttendance = attendance_type
      
        for (var i = 0; i < selectedMembers.length; i++) {
          var attendee = selectedMembers[i]
          var attendee_id = selectedMembers[i].id

          this.$http.post(url, {'attendee_id': attendee_id, 'attendance_type': setAttendance}, {emulateJSON:true}).then(function(response){
            returnedAttendee = response.json()
            foundAttendee = this.attendees.find(originalAttendee => originalAttendee.id === returnedAttendee.id)
            foundAttendee.attendance_type = setAttendance
          }.bind(this));
        }
      },
    }
  });
</script>

<template id="board-member-template">
      <div class="ai-user" v-bind:class="{ 'user-selected': toggleSelectedMember}" @click="selectMember"><i class="fa fa-person" aria-hidden="true">{{ attendee.user.first_name }}</i></div>
</template>

<script>
  Vue.component('board-member', {
    template: '#board-member-template',
    props: ['agendaItem', 'attendees', 'toggleSelectedMember', 'selectedMembersList','attendee'],
    methods: {
      selectMember: function(){
        if (this.selectedMembersList.includes(this.attendee)) {
          this.toggleSelectedMember = false
          this.selectedMembersList.pop(this.attendee)
        } else {
          this.toggleSelectedMember = true
          this.selectedMembersList.push(this.attendee)
        }
      }
    }
  })
</script>



