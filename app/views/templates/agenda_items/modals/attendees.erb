<template id="attendees-modal-template">
  <button class="button" @click.prevent="openModal">Log Attendees</button>

  <div class="modal" v-bind:class="{ 'is-active': showModal}">
  <div class="modal-background">
  </div>
    <div class="modal-card">
      <header class="modal-card-head">
        <h1 class="title is-3" class="modal-card-title">
          Log Votes</h1>
      </header>
      <section class="modal-card-body">
        <div class="modal-section">
          <div class="columns">
            <div class="column">
              <button class="button" @click.prevent="logAttendees('present')">Log Present Members</button>
              <div class="select-user">
                <p>Present</p>
                <ul v-for="attendee in attendees | filterBy 'present' in 'attendance_type'">
                  <div class="ai-user"><i class="fa fa-person" aria-hidden="true">{{ attendee.first_name }}</i></div>
                  <board-member :agenda-item.sync="agendaItem" :attendee="attendee"></board-member>
                </ul>
              </div>
            </div>
            <div class="column">
              <button class="button" @click.prevent="logAttendees('absent')">Log Absent Members</button>
              <div class="select-user">
                <p>Absent</p>
                <ul v-for="attendee in attendees | filterBy 'absent' in 'attendance_type'">
                  <div class="ai-user"><i class="fa fa-person" aria-hidden="true">{{ attendee.first_name }}</i></div>
                  <board-member :agenda-item.sync="agendaItem" :attendee="attendee"></board-member>
                </ul>
              </div>
            </div>
          </div>
      </section>
      <footer class="modal-card-foot">
        <button class="button" @click.prevent="closeModal">Close</button>
      </footer>
    </div>
</template>

<script>
  Vue.component('attendees-modal', {
    template: '#attendees-modal-template',
    props: ['agendaItem','attendees'],
    data: function(){
      return {
        showModal: false,
        toggleSelectedMember: false,
        selectedMembersList: []
      }
    },
    methods: {
      openModal: function() {
        this.showModal = true
      },
      closeModal: function() {
        this.showModal = false
      },
      logAttendees: function(attendance_type) {
        // var selectedVotes = this.selectedVotesList
        // for (i = 0; i < selectedVotes.length; i++) { 
        //   var vote = selectedVotes[i]
        //   var vote_id = selectedVotes[i].id

        //   this.$http.post('/api/votes', {'vote': vote, 'vote_id': vote_id,'vote_type': vote_type}, {emulateJSON:true}).then(function(response){
        //     returnedVote = response.json()
        //     found_vote = this.votes.find(originalVote => originalVote.id === returnedVote.id)
        //     vote = returnedVote
        //     found_vote.vote_type = returnedVote.vote_type
        //   }.bind(this));
        }
    },
    created: function() {
      if (this.attendees === 0) {
        this.$http.get('/api/users').then(function(response){
          users = response.json()
          console.log("got the users list!")
          // map over the users array and push them into the this.attendees array with an attendance type of absent
        }.bind(this));
      }  
    }
  });
</script>

<template id="board-member-template">
    <li class="ai-user" v-bind:class="{ 'user-selected': toggleSelectedMember}" @click="selectMember">
      <i class="fa fa-person" aria-hidden="true">
        {{meeting.meeting_attendee.first_name}} {{vote.meeting_attendee.last_name}}
      </i>
    </li>
</template>

<script>
  Vue.component('board-member', {
    template: '#board-member-template',
    props: ['agendaItem', 'attendees', 'toggleSelectedMember', 'selectedMembersList'],
    methods: {
      selectMember: function(){
        if (this.selectedMembersList.includes(this.vote)) {
          this.toggleSelectedMember = false
          this.selectedMembersList.pop(this.vote)
        } else {
          this.toggleSelectedMember = true
          this.selectedMembersList.push(this.vote)
        }
      }
    }
  })
</script>



