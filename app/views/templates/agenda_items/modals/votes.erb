<template id="votes-modal-template">
  <button class="button" @click.prevent="openModal">Log Votes</button>

  <div class="modal" v-bind:class="{ 'is-active': showModal}">
  <div class="modal-background">
  </div>
    <div class="modal-card">
      <header class="modal-card-head">
        <h1 class="title is-3" class="modal-card-title">
          Log Votes</h1>
      </header>
      <section class="modal-card-body">
        <div class="modal-section">
          <div class="columns">
            <div class="column">
              <button class="button" @click.prevent="logVotes('Abstained')">Log Abstaining Voter(s)</button>
              <div class="select-user">
                <p>Abstained Voters</p>
                <ul v-for="vote in votes | filterBy 'Abstain' in 'vote_type'">
                  <voter :agenda-item.sync="agendaItem" :user="user" :vote.sync="vote" :toggle-selected-voter="toggleSelectedVote" :selected-votes-list.sync="selectedVotesList"></voter>
                </ul>
              </div>
            </div>
            <div class="column">
              <button class="button" @click.prevent="logVotes('Opposed')">Log Opposing Voter(s)</button>
              <div class="select-user">
                <p>Opposed Voters</p>
                <div v-if="agendaItem.votes.length === 0">
                  <ul v-for="user in usersList">
                    <users-list :agenda-item.sync="agendaItem" :user="user" :vote.sync="vote" :toggle-selected-voter="toggleSelectedVote"></users-list>
                  </ul>
                </div>
                <!-- <div v-else> -->
                  <ul v-for="vote in votes | filterBy 'Opposed' in 'vote_type'">
                    <voter :agenda-item.sync="agendaItem" :user="user" :vote.sync="vote" :toggle-selected-voter="toggleSelectedVote" :selected-votes-list.sync="selectedVotesList"></voter>
                  </ul>
                <!-- </div> -->
              </div>
            </div>
            <div class="column">
              <button class="button" @click.prevent="logVotes('Abstained')">Log In Favour Voter(s)</button>
              <div class="select-user">
                <p>In Favour Voters</p>
                <ul v-for="vote in votes | filterBy 'In Favour' in 'vote_type'">
                  <voter :agenda-item.sync="agendaItem" :user="user" :vote.sync="vote" :toggle-selected-voter="toggleSelectedVote" :selected-votes-list.sync="selectedVotesList"></voter>
                </ul>
              </div>
            </div>

            </div>
          </div>
      </section>
      <footer class="modal-card-foot">
        <button class="button" @click.prevent="closeModal">Close</button>
      </footer>
    </div>
</template>

<script>
  Vue.component('votes-modal', {
    template: '#votes-modal-template',
    props: ['agendaItem','votes'],
    data: function(){
      return {
        showModal: false,
        toggleSelectedVote: false,
        usersList: [],
        selectedVotesList: []
      }
    },
    methods: {
      openModal: function() {
        this.showModal = true
      },
      closeModal: function() {
        this.showModal = false
      },
      logVotes: function(vote_type) {
        var selectedVotes = this.selectedVotesList
        for (i = 0; i < selectedVotes.length; i++) { 
          var vote = selectedVotes[i]
          var vote_id = selectedVotes[i].id

          this.$http.post('/api/votes', {'vote': vote, 'vote_id': vote_id,'vote_type': vote_type}, {emulateJSON:true}).then(function(response){
            returnedVote = response.json()
            found_vote = this.votes.find(originalVote => originalVote.id === returnedVote.id)
            vote = returnedVote
            found_vote.vote_type = returnedVote.vote_type
          }.bind(this));
        }
      }
    },
    created: function() {
      this.$http.get('/api/users').then(function(response){
        this.usersList= response.json()
      }.bind(this));
    }
});

</script>

<template id="voter-template">
    <li class="ai-user" v-bind:class="{ 'user-selected': toggleSelectedVote}" @click="selectVote">
      <i class="fa fa-person" aria-hidden="true">
        {{user.first_name}} {{vote.voting_user.first_name}} {{user.last_name}} {{vote.voting_user.last_name}}
      </i>
    </li>
</template>

<script>
  Vue.component('voter', {
    template: '#voter-template',
    props: ['agendaItem', 'user', 'vote', 'toggleSelectedVote', 'selectedVotesList'],
    methods: {
      selectVote: function(){
        if (this.selectedVotesList.includes(this.vote)) {
          this.toggleSelectedVote = false
          this.selectedVotesList.pop(this.vote)
        } else {
          this.toggleSelectedVote = true
          this.selectedVotesList.push(this.vote)
        }
      }
    }
  })
</script>

